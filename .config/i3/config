# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
set $font MesloLGS NF

font pango:$font 9 

# Screen Locker
set $locker i3lock -c 000000

set $terminal alacritty 

# Default borders 
default_border pixel 1
default_floating_border normal

# Hide borders
hide_edge_borders smart 

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+b split h; exec --no-startup-id notify-send 'tile horizontally'
bindsym $mod+v split v; exec --no-startup-id notify-send 'tile vertically'
bindsym $mod+semicolon split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#navigate workspaces next / previous
bindsym $mod+Prior workspace prev
bindsym $mod+Next workspace next

# focus the parent container
bindsym $mod+bracketleft focus parent

# focus the child container
bindsym $mod+bracketright focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move workspace to another screen if it exists
bindsym $mod+m move workspace to output left

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# start a terminal
bindsym $mod+Return exec --no-startup-id $terminal

# kill focused window
bindsym $mod+Shift+q kill

# Audio
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Screen brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id "light -A 10; notify-send -r 1 Brightness $(light -G)%"
bindsym XF86MonBrightnessDown exec --no-startup-id "light -U 10; notify-send -r 1 Brightness $(light -G)%"

# Print Screen
bindsym Print exec --no-startup-id flameshot gui

# start program launcher
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# File manager
bindsym $mod+Control+f exec thunar
# Browser
bindsym $mod+Control+w exec brave 
# Calculator
bindsym $mod+Control+c exec --no-startup-id galculator
# Music
bindsym $mod+control+m exec --no-startup-id $terminal -t "ncmpcpp" -e "ncmpcpp"

bindsym $mod+F10 exec --no-startup-id playerctl play-pause
bindsym $mod+F11 exec --no-startup-id playerctl previous
bindsym $mod+F12 exec --no-startup-id playerctl next

# Toggle redshift
bindsym $mod+Control+r exec --no-startup-id "pkill -USR1 redshift"; exec --no-startup-id notify-send "Toggling redshift..." -u low

# Set shut down, restart and locking features
bindsym $mod+Escape mode "$mode_system"
set $mode_system (l)ock, (e)xit, (s)uspend, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
  bindsym l exec --no-startup-id $locker, mode "default"
  bindsym s exec --no-startup-id systemctl suspend, mode "default"
  bindsym e exec --no-startup-id i3-msg exit, mode "default"
  bindsym r exec --no-startup-id systemctl reboot, mode "default"
  bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

  # exit system mode: "Enter" or "Escape"
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

set $mode_noti Notifications (Return) invoke, (r) restore (d) dismiss, (Shift+d) dismiss all
mode "$mode_noti" {
  bindsym Return exec --no-startup-id dunstctl action ; exec --no-startup-id dunstctl close; mode "default"
  bindsym d exec --no-startup-id dunstctl close; mode "default"
  bindsym Shift+d exec --no-startup-id dunstctl close-all; mode "default"
  bindsym r exec --no-startup-id dunstctl history-pop
  bindsym Escape mode "default"
}
bindsym $mod+n mode "$mode_noti"

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym $left resize shrink width 10 px or 10 ppt
  bindsym $down resize grow height 10 px or 10 ppt
  bindsym $up resize shrink height 10 px or 10 ppt
  bindsym $right resize grow width 10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt

  # back to normal: Enter or Escape or $mod+r
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

set $mode_xrandr xrandr (l) laptop, (d) docked
mode "$mode_xrandr" {
  bindsym l exec --no-startup-id autorandr laptop; mode "default"
  bindsym d exec --no-startup-id autorandr docked; mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+x mode "$mode_xrandr"

# App rules
for_window [class="Galculator"] floating enable border normal
for_window [class="firefox" title="About Mozilla Firefox"] floating enable border normal
for_window [class="firefox" title="^Picture-in-Picture$"] floating enable sticky enable border normal
for_window [class="Dconf-editor"] floating enable
for_window [class="Pavucontrol"] floating enable border normal
for_window [class="Blueman"] floating enable border normal
for_window [title="nmtui"] floating enable
for_window [class="Lxappearance"] floating enable
for_window [class="Alacritty" title="ncmpcpp"] floating enable sticky enable

# Autostart applications
exec --no-startup-id feh --bg-fil ~/.config/wall.jpg
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
#exec --no-startup-id nm-applet
#exec --no-startup-id blueman-applet
exec --no-startup-id picom -b

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
# exec --no-startup-id dex --autostart --environment i3

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- $locker --nofork

# Suspend after 60 minutes
exec --no-startup-id xautolock -time 60 -locker "systemctl suspend" -notify 10 \
  -notifier 'notify-send -u critical -t 8 "PC will suspend in 10 seconds"' -detectsleep  

# Make sure dunst is used for notifications
exec --no-startup-id dunst

# mpd mpris2 support
# exec --no-startup-id mpDris2

bar {
  position bottom
  status_command i3status-rs
  tray_output primary
  font pango:$font 10
}

